{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","pressedKey","changingKey","detectKeyDown","e","key","useEffect","document","addEventListener","className","type","ReactDOM","render","getElementById"],"mappings":"wMAEaA,EAAgB,WAC3B,MAAkCC,mBAAS,2BAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAgB,SAACC,GACrBF,EAAYE,EAAEC,MAOhB,OAJAC,qBAAU,WACRC,SAASC,iBAAiB,QAASL,GAAe,KACjD,IAGD,sBAAKM,UAAU,MAAf,UAEE,uBAAOC,KAAK,SAEZ,mBAAGD,UAAU,eAAb,SAEkB,4BAAfR,EAAA,UACMA,GADN,mCAE+BA,EAF/B,W,MCfTU,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.e14eaa33.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nexport const App: React.FC = () => {\n  const [pressedKey, changingKey] = useState('Nothing was pressed yet');\n\n  const detectKeyDown = (e: KeyboardEvent) => {\n    changingKey(e.key);\n  };\n\n  useEffect(() => {\n    document.addEventListener('keyup', detectKeyDown, true);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {/* Keep this input for tests */}\n      <input type=\"text\" />\n\n      <p className=\"App__message\">\n\n        {pressedKey === 'Nothing was pressed yet'\n          ? `${pressedKey}`\n          : `The last pressed key is [${pressedKey}]`}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}